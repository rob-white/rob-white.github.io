<!DOCTYPE html>
<head>
    <meta http-equiv="X-UA-Compatible" content="IE=Edge"/>
    <title>Reusable Chart Example 1</title>

    <meta name="viewport" content="width=device-width, initial-scale=1.0">

    <!-- Bootstrap themed site -->
    <link href="../css/bootstrap/bootstrap.min.css?v=1.0" rel="stylesheet" type="text/css"/>
    <link href="../css/bootstrap/bootstrap-responsive.min.css?v=1.0" rel="stylesheet" type="text/css"/>

    <style type="text/css">

        #tab-container{
            margin-top: 60px;
        }

        .axis path,
        .axis line {
            fill: none;
            stroke: #000;
            shape-rendering: crispEdges;
        }

        .line {
            fill: none;
            stroke: steelblue;
            stroke-width: 1.5px;
        }

        .grid .tick {
            stroke: #ededed;
            opacity: 0.7;
        }

        .axis {
            -webkit-user-select: none;  /* Chrome/Safari */
            -moz-user-select: none;     /* Firefox */
            -ms-user-select: none;      /* IE10+ */
        }
    </style>
</head><!--/head -->

<html lang="en-us">
<body>
<div id="tab-container" class="container-fluid">
    <ul class="nav nav-tabs" id="tabs">
        <li id="example-1-tab">
            <a href="#example-1" data-toggle="tab">Example 1</a>
        </li>
    </ul><!--/#tabs -->
    <div class="tab-content">
        <div class="tab-pane" id="example-1">
            <form class="query-settings form-inline">
                <button id="example-1-query-btn" type="submit" class="btn">Refresh Data</button>
            </form>
            <div class="row-fluid">
                <div class="span7">
                    <div class="row-fluid">
                        <div id="example-1-chart" class="span10"></div>
                        <div id="example-1-legend" class="span2"></div>
                    </div>
                </div>
                <div class="span5">
                    <h3 class="text-center">Overview</h3>
                    <hr/>
                    <a href="https://github.com/rob-white/d3-reusable-charts/blob/master/d3-reusable-charts/examples/example-1.htm">Source Code on Github</a>
                    <hr/>
                    <p><b>Scatter Chart Example</b></p>
                    <ul>
                        <li>Selectable legend that hides/shows data points</li>
                        <li>Refresh data and reload chart with new data</li>
                        <li>Animated movement of chart elements when data changes</li>
                        <li>Bootstrap tooltip with data point information</li>
                        <li>Auto-resize on window resize</li>
                    </ul>
                </div>
            </div>
        </div><!--/#example-1 -->
    </div><!--/.tab-content -->
</div><!--/.tab-content -->

<!-- jQuery scripts -->
<script src="../js/jquery/jquery-1.9.1.js?v=1.0" type="text/javascript"></script>
<!-- Only used for creating a fake jQuery ajax request -->
<script src="js/ajax.fake.js" type="text/javascript"></script>
<script src="js/webservices.fake.js" type="text/javascript"></script>
<!-- Bootstrap scripts -->
<script src="../js/bootstrap/bootstrap.min.js?v=1.0" type="text/javascript"></script>
<!-- D3.js library -->
<script src="../js/d3/d3.js?v=1.0" charset="utf-8" type="text/javascript"></script>
<!-- Underscore Dependency -->
<script src="../js/underscore/underscore.js?v=1.0" type="text/javascript"></script>
<!-- Reusable charts using d3.js -->
<script src="../reusable.scatterchart.js?v=1.0" type="text/javascript"></script>

<script type="text/javascript">
    // Example 1
    $(document).ready(function () {
        // When jQuery's ready, initialize the example and show the tab
        var example = Example().init().show();

        $(window).on('resize', function(){
            example.resize();
        });
    });

    function Example() {

        var $el = {
            tab: $('#example-1-tab a'),
            chartContainer: $('#example-1-chart'),
            queryBtn: $('#example-1-query-btn')
        },
        dateFormat = d3.time.format("%m/%d/%Y %H:%M:%S"),
        chartHeight = 300,
        chart;

        // Constructor
        function page() { }

        // ----- Public -----
        page.init = function () {

            // Allow buttons to respond to on-click event
            $el.queryBtn.on('click', function (e) {
                e.preventDefault();
                queryData();
            });

            // When this tab is shown to the user,
            // run resize for page elements
            $el.tab.on('shown', function (e) {
                resizePageElements();
            });

            queryData();

            return page;
        };

        // Show the tab if it's not currently selected
        page.show = function () {
            $el.tab.tab('show');
            return page;
        };

        page.resize = function () {
            resizePageElements();
            return page;
        };

        // ----- Private functions -----
        // Set the page to "loading" state (user can't click on anything)
        function enablePageLoading() {
            $el.queryBtn.prop('disabled', true).text('Loading...').blur();
        }

        // Remove "loading" state from the page (user now allowed to interact with stuff)
        function disablePageLoading() {
            $el.queryBtn.prop('disabled', false).text('Refresh Data');
        }

        function queryData() {
            enablePageLoading();
            $.ajax({
                url: "http://example.url.com/example1.json",
                type: "GET",
                async: true,
                fake: true,
                success: function(data){
                    renderChart(data);
                    disablePageLoading();
                }
            })
        }

        // Code to render the chart
        function renderChart(data){
            chart = ScatterChart()
                .rootNode(d3.select('#tab-container')) // For tooltip
                .width($el.chartContainer.width())
                .height(chartHeight)
                .margin({ top: 10, right: 5, bottom: 40, left: 30 })
                .dataId(function(d){
                    // Column that makes a row unique
                    return d['id'];
                })
                .x(function (d) {
                    // X axis value column
                    return dateFormat.parse(d['date']);
                })
                .y(function (d) {
                    // Y axis value column
                    return d['score'];
                })
                .xTickFormat(function (d) {
                    var format = d3.time.format('%m/%d');
                    return format(d);
                })
                .color(d3.scale.category10())
                .yAxisLabel('Score')
                .xAxisLabel('Date')
                .showLegend(true)
                .showGrid(true)
                .legendContainer('#example-1-legend')
                .groupBy(function (d) {
                    // Colors data/creates legend by this column
                    return d['gender'];
                });

            d3.select('#' + $el.chartContainer.attr('id'))
                .datum(data)
                .call(chart);

            resizePageElements();
        }

        // Resize width of chart when pages resizes
        function resizePageElements() {
            if(chart){
                d3.select('#' + $el.chartContainer.attr('id'))
                    .call(chart
                        .width($el.chartContainer.width())
                        .height(chartHeight)
                        .x(function (d) {
                            return dateFormat.parse(d['date']);
                        })
                        .y(function (d) {
                            return d['score'];
                        }));
            }
        }

        return page;
    }

</script>
</body><!--/body -->
</html><!--/html -->
